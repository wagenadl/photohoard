{ "typ": "page",
  "cre": "2019-07-28T20:13:41",
  "mod": "2019-07-28T21:09:04",
  "cui": "dfd8b12c183113e4",
  "stampTime": 0,
  "startPage": 70,
  "unlocked": false,
  "uuid": "21a26b5d",
  "cc": [
    { "typ": "resources",
      "cre": "2019-07-28T20:13:41",
      "mod": "2019-07-28T20:13:41",
      "uuid": "bb4e0b43"
    },
    { "typ": "title",
      "cre": "2019-07-28T20:13:41",
      "mod": "2019-07-28T20:13:48",
      "uuid": "ca9f3e77",
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:13:41",
          "mod": "2019-07-28T20:13:48",
          "lines": [
            0
          ],
          "text": "Struggling with AllAdjuster",
          "uuid": "26f00750"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:13:49",
      "mod": "2019-07-28T20:25:17",
      "h": 96.664,
      "ind": 0,
      "sheet": 0,
      "split": [ ],
      "uuid": "20c5e9b6",
      "y0": 72.0,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:13:49",
          "mod": "2019-07-28T20:25:17",
          "lines": [
            0,
            60,
            121,
            189
          ],
          "text": "I don’t like the way retrieveReduced is organized. The loop structure confuses me. Conceptually, it would be much easier to implement it recursively from the last N. I will rewrite it like that. But that isn’t easy either, so I won’t after all. ",
          "uuid": "ae605560"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:13:49",
      "mod": "2019-07-28T20:53:29",
      "h": 142.996,
      "ind": 1,
      "sheet": 0,
      "split": [ ],
      "uuid": "20c5e9b6",
      "y0": 168.664,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:13:49",
          "mod": "2019-07-28T20:53:29",
          "lines": [
            0,
            52,
            111,
            175,
            239,
            302
          ],
          "text": "The situation is complicated. Let there be N layers numbered 1…N as well as the base layer (0). Assume that we had previously calculated so that layers up to layer P ≤ N have valid input. Let the first changed setting occur at layer K and the first geometry at layer G. I still have to worry about max size as well, but that’s the next step.",
          "uuid": "ae605560",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T20:19:30",
              "mod": "2019-07-28T20:25:06",
              "end": 44,
              "start": 43,
              "style": 1,
              "uuid": "ae52ec9e"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:19:38",
              "mod": "2019-07-28T20:25:06",
              "end": 64,
              "start": 63,
              "style": 1,
              "uuid": "0d9dec06"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:20:00",
              "mod": "2019-07-28T20:25:06",
              "end": 165,
              "start": 164,
              "style": 1,
              "uuid": "28ccf189"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:20:03",
              "mod": "2019-07-28T20:25:06",
              "end": 169,
              "start": 168,
              "style": 1,
              "uuid": "2663246f"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:20:16",
              "mod": "2019-07-28T20:25:06",
              "end": 234,
              "start": 233,
              "style": 1,
              "uuid": "3a72d335"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:20:25",
              "mod": "2019-07-28T20:25:06",
              "end": 268,
              "start": 267,
              "style": 1,
              "uuid": "fc06b524"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:21:44",
      "mod": "2019-07-28T20:23:01",
      "h": 96.664,
      "ind": 1,
      "sheet": 0,
      "split": [ ],
      "uuid": "1feba61f",
      "y0": 311.66,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:21:44",
          "mod": "2019-07-28T20:23:01",
          "lines": [
            0,
            61,
            123,
            179
          ],
          "text": "If geometry is changed at G, I don’t have to recompute layer G as such, but I do have to redo the mixing that produces the input for layer G+1. The setting change at layer K does necessitate a full recalculation of layer K.",
          "uuid": "a7f0c744",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T20:21:55",
              "mod": "2019-07-28T20:21:55",
              "end": 27,
              "start": 26,
              "style": 1,
              "uuid": "29765a24"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:22:03",
              "mod": "2019-07-28T20:22:03",
              "end": 62,
              "start": 61,
              "style": 1,
              "uuid": "debd1dc7"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:22:20",
              "mod": "2019-07-28T20:22:20",
              "end": 140,
              "start": 139,
              "style": 1,
              "uuid": "d4ba2aa7"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:22:42",
              "mod": "2019-07-28T20:22:42",
              "end": 173,
              "start": 172,
              "style": 1,
              "uuid": "74342c94"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:23:01",
              "mod": "2019-07-28T20:23:01",
              "end": 222,
              "start": 221,
              "style": 1,
              "uuid": "8bc53c5e"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:23:16",
      "mod": "2019-07-28T20:23:24",
      "h": 27.166,
      "ind": 1,
      "sheet": 0,
      "split": [ ],
      "uuid": "4ab87ff2",
      "y0": 408.324,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:23:16",
          "mod": "2019-07-28T20:23:24",
          "lines": [
            0
          ],
          "text": "Note the procedure:",
          "uuid": "2594454b"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:23:24",
      "mod": "2019-07-28T20:29:04",
      "h": 232.987,
      "ind": 3,
      "sheet": 0,
      "split": [ ],
      "uuid": "09e8c62c",
      "y0": 435.49,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:23:24",
          "mod": "2019-07-28T20:29:04",
          "lines": [
            0,
            20,
            39,
            65,
            85,
            108,
            131,
            157,
            177,
            200,
            223,
            225,
            248
          ],
          "text": "− Calculate layer 0\n− Retrieve layer 0\n− Store input for layer 1\n− Calculate layer 1\n− Retrieve layers 0, 1\n− Mix down with mask 1\n− Store input for layer 2\n− Calculate layer 2\n− Retrieve layers 1, 2\n− Mix down with mask 2\n…\n− Mix down with mask N\n− Return to caller",
          "uuid": "fcf66c86",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T20:24:45",
              "mod": "2019-07-28T20:24:45",
              "end": 247,
              "start": 246,
              "style": 1,
              "uuid": "816dac5f"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:25:43",
      "mod": "2019-07-28T20:29:34",
      "h": 142.996,
      "ind": 0,
      "sheet": 0,
      "split": [
        23.166
      ],
      "uuid": "9f3291b5",
      "y0": 668.477,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:25:43",
          "mod": "2019-07-28T20:29:34",
          "lines": [
            0,
            58,
            125,
            188,
            245,
            306
          ],
          "text": "How about size? Each layer knows its “max available size” which is essentially the size of the provided input. If at a given layer Q this is less than at the previous layer, and it is not enough, I need to provide better input to Q, which means retrieving layers Q−1 and Q−2, mixing them down, and storing them as input for Q.",
          "uuid": "fed13421",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T20:26:50",
              "mod": "2019-07-28T20:26:50",
              "end": 177,
              "start": 174,
              "style": 1,
              "uuid": "6c8b3357"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:28:02",
              "mod": "2019-07-28T20:28:02",
              "end": 132,
              "start": 131,
              "style": 1,
              "uuid": "4d846ade"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:28:35",
              "mod": "2019-07-28T20:28:35",
              "end": 231,
              "start": 230,
              "style": 1,
              "uuid": "f86b2e5b"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:29:18",
              "mod": "2019-07-28T20:29:18",
              "end": 264,
              "start": 263,
              "style": 1,
              "uuid": "1d7249f9"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:29:20",
              "mod": "2019-07-28T20:29:20",
              "end": 272,
              "start": 271,
              "style": 1,
              "uuid": "c130c3c7"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:29:33",
              "mod": "2019-07-28T20:29:33",
              "end": 325,
              "start": 324,
              "style": 1,
              "uuid": "f947be8e"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:33:15",
      "mod": "2019-07-28T20:51:10",
      "h": 50.332,
      "ind": 1,
      "sheet": 1,
      "split": [ ],
      "uuid": "31210883",
      "y0": 191.83,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:33:15",
          "mod": "2019-07-28T20:51:10",
          "lines": [
            0,
            58
          ],
          "text": "Note that AllAdjuster doesn’t need to know that something has to be recomputed specifically: it only does the retrieving.",
          "uuid": "028be22d"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:51:18",
      "mod": "2019-07-28T20:51:58",
      "h": 27.166,
      "ind": 1,
      "sheet": 1,
      "split": [ ],
      "uuid": "2e976011",
      "y0": 242.162,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:51:18",
          "mod": "2019-07-28T20:51:58",
          "lines": [
            0
          ],
          "text": "So: I need to find N, K, G, P, and Q.",
          "uuid": "ea48db66",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T20:51:49",
              "mod": "2019-07-28T20:51:49",
              "end": 20,
              "start": 19,
              "style": 1,
              "uuid": "b00fe57a"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:51:50",
              "mod": "2019-07-28T20:51:50",
              "end": 23,
              "start": 22,
              "style": 1,
              "uuid": "53c355c5"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:51:50",
              "mod": "2019-07-28T20:51:50",
              "end": 26,
              "start": 25,
              "style": 1,
              "uuid": "a607a825"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:51:56",
              "mod": "2019-07-28T20:51:56",
              "end": 29,
              "start": 28,
              "style": 1,
              "uuid": "5b5e2248"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:51:58",
              "mod": "2019-07-28T20:51:58",
              "end": 36,
              "start": 35,
              "style": 1,
              "uuid": "6ab9b836"
            }
          ]
        }
      ]
    },
    { "typ": "tableblock",
      "cre": "2019-07-28T20:53:56",
      "mod": "2019-07-28T20:57:05",
      "h": 154.996,
      "ind": 1,
      "sheet": 1,
      "split": [ ],
      "uuid": "ecff21ec",
      "y0": 269.328,
      "cc": [
        { "typ": "table",
          "cre": "2019-07-28T20:53:56",
          "mod": "2019-07-28T20:57:05",
          "len": [
            6,
            16,
            20,
            1,
            3,
            0,
            1,
            1,
            0,
            1,
            3,
            0,
            1,
            0,
            1,
            1,
            0,
            1
          ],
          "nc": 3,
          "nr": 6,
          "text": "\nParam.\nLayer to re-feed\nLayer to re-retrieve\nP\nP+1\n\nQ\nQ\n\nG\nG+1\n\nK\n\nK\nN\n\nN\n",
          "uuid": "05159a48",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T20:54:49",
              "mod": "2019-07-28T20:56:23",
              "end": 47,
              "start": 46,
              "style": 1,
              "uuid": "054f50be"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:55:15",
              "mod": "2019-07-28T20:56:23",
              "end": 49,
              "start": 48,
              "style": 1,
              "uuid": "df6db087"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:55:22",
              "mod": "2019-07-28T20:56:23",
              "end": 54,
              "start": 53,
              "style": 1,
              "uuid": "c60b273f"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:55:26",
              "mod": "2019-07-28T20:56:23",
              "end": 56,
              "start": 55,
              "style": 1,
              "uuid": "dcb6ecbe"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:55:46",
              "mod": "2019-07-28T20:56:23",
              "end": 59,
              "start": 58,
              "style": 1,
              "uuid": "e9286210"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:55:51",
              "mod": "2019-07-28T20:56:23",
              "end": 61,
              "start": 60,
              "style": 1,
              "uuid": "42ef42f5"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:56:02",
              "mod": "2019-07-28T20:56:23",
              "end": 66,
              "start": 65,
              "style": 1,
              "uuid": "26f05f72"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:56:30",
              "mod": "2019-07-28T20:56:30",
              "end": 69,
              "start": 68,
              "style": 1,
              "uuid": "246ff87a"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:57:04",
              "mod": "2019-07-28T20:57:04",
              "end": 71,
              "start": 70,
              "style": 1,
              "uuid": "0b280783"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:57:05",
              "mod": "2019-07-28T20:57:05",
              "end": 74,
              "start": 73,
              "style": 1,
              "uuid": "1bc024db"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T20:57:09",
      "mod": "2019-07-28T21:06:26",
      "h": 119.83,
      "ind": 0,
      "sheet": 1,
      "split": [ ],
      "uuid": "63c7c317",
      "y0": 424.324,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T20:57:09",
          "mod": "2019-07-28T21:06:26",
          "lines": [
            0,
            66,
            130,
            193,
            254
          ],
          "text": "So I first find the lesser of Q, G+1, P+1 and call that F. I then compute the lesser of K and N and call that R. Since retrieving R implies refeeding R+1 (and R+2), I update F to be the lesser of R+1 and the old value of F. Refeeding N+1 means returning to caller. F = min { Q, G+1, P+1, K+1, N+1 }",
          "uuid": "6359ddb4",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T20:57:19",
              "mod": "2019-07-28T20:57:19",
              "end": 31,
              "start": 30,
              "style": 1,
              "uuid": "b51c8802"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:57:20",
              "mod": "2019-07-28T20:57:20",
              "end": 34,
              "start": 33,
              "style": 1,
              "uuid": "b067e4c6"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:57:21",
              "mod": "2019-07-28T20:57:21",
              "end": 39,
              "start": 38,
              "style": 1,
              "uuid": "d8fa9e6e"
            },
            { "typ": "markup",
              "cre": "2019-07-28T20:57:29",
              "mod": "2019-07-28T20:57:29",
              "end": 57,
              "start": 56,
              "style": 1,
              "uuid": "6a61a68d"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:01:41",
              "mod": "2019-07-28T21:01:41",
              "end": 89,
              "start": 88,
              "style": 1,
              "uuid": "2dfed712"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:01:43",
              "mod": "2019-07-28T21:01:43",
              "end": 95,
              "start": 94,
              "style": 1,
              "uuid": "c30a1dea"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:01:45",
              "mod": "2019-07-28T21:01:45",
              "end": 111,
              "start": 110,
              "style": 1,
              "uuid": "03b94e84"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:01:50",
              "mod": "2019-07-28T21:01:50",
              "end": 131,
              "start": 130,
              "style": 1,
              "uuid": "e6f97988"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:01:56",
              "mod": "2019-07-28T21:01:56",
              "end": 151,
              "start": 150,
              "style": 1,
              "uuid": "cceb24b4"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:01:58",
              "mod": "2019-07-28T21:01:58",
              "end": 160,
              "start": 159,
              "style": 1,
              "uuid": "5d6e9dfa"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:02:13",
              "mod": "2019-07-28T21:02:13",
              "end": 175,
              "start": 174,
              "style": 1,
              "uuid": "f709dd37"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:02:18",
              "mod": "2019-07-28T21:02:18",
              "end": 197,
              "start": 196,
              "style": 1,
              "uuid": "5cde7cb3"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:02:55",
              "mod": "2019-07-28T21:02:55",
              "end": 235,
              "start": 234,
              "style": 1,
              "uuid": "2a34f087"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:05:58",
              "mod": "2019-07-28T21:05:58",
              "end": 222,
              "start": 221,
              "style": 1,
              "uuid": "28d427a4"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:06:09",
              "mod": "2019-07-28T21:06:09",
              "end": 266,
              "start": 265,
              "style": 1,
              "uuid": "7965e194"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:06:18",
              "mod": "2019-07-28T21:06:18",
              "end": 276,
              "start": 275,
              "style": 1,
              "uuid": "f35cc904"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:06:19",
              "mod": "2019-07-28T21:06:19",
              "end": 279,
              "start": 278,
              "style": 1,
              "uuid": "c8653669"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:06:21",
              "mod": "2019-07-28T21:06:21",
              "end": 284,
              "start": 283,
              "style": 1,
              "uuid": "bbfc5eb7"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:06:23",
              "mod": "2019-07-28T21:06:23",
              "end": 289,
              "start": 288,
              "style": 1,
              "uuid": "dffde427"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:06:25",
              "mod": "2019-07-28T21:06:25",
              "end": 294,
              "start": 293,
              "style": 1,
              "uuid": "5ea21491"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2019-07-28T21:03:07",
      "mod": "2019-07-28T21:09:04",
      "h": 119.83,
      "ind": 1,
      "sheet": 1,
      "split": [ ],
      "uuid": "70ecadce",
      "y0": 544.154,
      "cc": [
        { "typ": "text",
          "cre": "2019-07-28T21:03:07",
          "mod": "2019-07-28T21:09:04",
          "lines": [
            0,
            62,
            120,
            180,
            242
          ],
          "text": "I don’t actually need to calculate all of these parameters, I can simply start with F = 1 and work my way up as long as possible, i.e., as long as there is no size change at F, no geometry change at F−1, already valid input at F, no settings change at F−1, and F<N+1, I can increase F.",
          "uuid": "0ae3c87a",
          "cc": [
            { "typ": "markup",
              "cre": "2019-07-28T21:05:28",
              "mod": "2019-07-28T21:05:28",
              "end": 85,
              "start": 84,
              "style": 1,
              "uuid": "6e1695f8"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:07:51",
              "mod": "2019-07-28T21:07:51",
              "end": 175,
              "start": 174,
              "style": 1,
              "uuid": "a2a7c8a4"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:07:58",
              "mod": "2019-07-28T21:07:58",
              "end": 200,
              "start": 199,
              "style": 1,
              "uuid": "b10e6a27"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:08:09",
              "mod": "2019-07-28T21:08:09",
              "end": 253,
              "start": 252,
              "style": 1,
              "uuid": "04f435ef"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:08:23",
              "mod": "2019-07-28T21:08:23",
              "end": 228,
              "start": 227,
              "style": 1,
              "uuid": "de92f247"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:08:39",
              "mod": "2019-07-28T21:08:39",
              "end": 262,
              "start": 261,
              "style": 1,
              "uuid": "b4199a15"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:08:41",
              "mod": "2019-07-28T21:08:41",
              "end": 264,
              "start": 263,
              "style": 1,
              "uuid": "39e227f7"
            },
            { "typ": "markup",
              "cre": "2019-07-28T21:08:50",
              "mod": "2019-07-28T21:08:50",
              "end": 284,
              "start": 283,
              "style": 1,
              "uuid": "2fdd6bb1"
            }
          ]
        }
      ]
    }
  ]
}
